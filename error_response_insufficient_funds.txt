➜  x402-sample git:(main) ✗ yarn dev
yarn run v1.22.22
$ tsx index.ts
data {
  x402Version: 1,
  code: 402,
  msg: 'insufficient_funds',
  accepts: [
    {
      scheme: 'exact',
      network: 'base',
      maxAmountRequired: '110000',
      resource: 'https://snack.money',
      description: '',
      mimeType: '',
      payTo: '0x1223d566f05Ea54E5854434C4552c9f5C2259e0f',
      maxTimeoutSeconds: 60,
      asset: '0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913',
      extra: [Object]
    }
  ],
  payer: ''
}
error AxiosError: Request failed with status code 402
    at settle (file:///Users/mesutcelik/kachpara-projects/experiment-projects/x402-sample/node_modules/axios/lib/core/settle.js:19:12)
    at IncomingMessage.handleStreamEnd (file:///Users/mesutcelik/kachpara-projects/experiment-projects/x402-sample/node_modules/axios/lib/adapters/http.js:599:11)
    at IncomingMessage.emit (node:events:531:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (file:///Users/mesutcelik/kachpara-projects/experiment-projects/x402-sample/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async <anonymous> (/Users/mesutcelik/kachpara-projects/experiment-projects/x402-sample/node_modules/x402-axios/src/index.ts:86:32)
    at async Axios.request (file:///Users/mesutcelik/kachpara-projects/experiment-projects/x402-sample/node_modules/axios/lib/core/Axios.js:40:14)
    at Axios.request (file:///Users/mesutcelik/kachpara-projects/experiment-projects/x402-sample/node_modules/axios/lib/core/Axios.js:45:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
  code: 'ERR_BAD_REQUEST',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function [FormData]], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '153',
      'Accept-Encoding': 'gzip, compress, deflate, br',
      'X-PAYMENT': 'eyJ4NDAyVmVyc2lvbiI6MSwic2NoZW1lIjoiZXhhY3QiLCJuZXR3b3JrIjoiYmFzZSIsInBheWxvYWQiOnsic2lnbmF0dXJlIjoiMHg2MTU0ZTMzZjFkOWIzMDY2MDRhZDJhOWM3NGVjNTJiZWZlMDIzZjUxNWI3Y2M5ZjA3M2YwYmI1MjIyYjlkNWY3M2NlZDBhYTNlNmE2NzY0ZDQyY2I5NDQ2YmJmYTEzM2NhYmI1NjFmMWYyOWM5Y2YwNmQ3ZDdkMmM3MWI1MWUxNTFjIiwiYXV0aG9yaXphdGlvbiI6eyJmcm9tIjoiMHhGODI5NzExMTdiQUY3M2M0MkMwNGM2QTBkNjE5YkE5ZDZhZUE4N2ZhIiwidG8iOiIweDEyMjNkNTY2ZjA1RWE1NEU1ODU0NDM0QzQ1NTJjOWY1QzIyNTllMGYiLCJ2YWx1ZSI6IjExMDAwMCIsInZhbGlkQWZ0ZXIiOiIxNzQ4OTA2MDMxIiwidmFsaWRCZWZvcmUiOiIxNzQ4OTA2NjkxIiwibm9uY2UiOiIweDQ4MWU5ZjZlMmE0M2JjNjJlMGRmMzhlODc5NDliOWM5Y2I4MWE3MGE2MjY1ZGUwNzg0YmRmZWQ5NzM3NTcwYmUifX19',
      'Access-Control-Expose-Headers': 'X-PAYMENT-RESPONSE'
    },
    baseURL: 'https://api.snack.money',
    method: 'post',
    url: '/pay',
    data: '{"amount":0.1,"currency":"USDC","type":"social-network","sender_username":"agent-mesut2","receiver_username":"0xmesuthere","receiver_identity":"twitter"}',
    allowAbsoluteUrls: true,
    __is402Retry: true
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '153',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: true,
    socket: TLSSocket {
      _tlsOptions: [Object],
      _secureEstablished: true,
      _securePending: false,
      _newSessionPending: false,
      _controlReleased: true,
      secureConnecting: false,
      _SNICallback: null,
      servername: 'api.snack.money',
      alpnProtocol: false,
      authorized: true,
      authorizationError: null,
      encrypted: true,
      _events: [Object: null prototype],
      _eventsCount: 9,
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: 'api.snack.money',
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: false,
      _maxListeners: undefined,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: undefined,
      _server: null,
      ssl: [TLSWrap],
      _requestCert: true,
      _rejectUnauthorized: true,
      timeout: 5000,
      parser: null,
      _httpMessage: null,
      [Symbol(alpncallback)]: null,
      [Symbol(res)]: [TLSWrap],
      [Symbol(verified)]: true,
      [Symbol(pendingSession)]: null,
      [Symbol(async_id_symbol)]: -1,
      [Symbol(kHandle)]: [TLSWrap],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 1183,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 8294,
        [Symbol(triggerId)]: 8292
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: false,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 1,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(connect-options)]: [Object]
    },
    _header: 'POST /pay HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: axios/1.9.0\r\n' +
      'Content-Length: 153\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'X-PAYMENT: eyJ4NDAyVmVyc2lvbiI6MSwic2NoZW1lIjoiZXhhY3QiLCJuZXR3b3JrIjoiYmFzZSIsInBheWxvYWQiOnsic2lnbmF0dXJlIjoiMHg2MTU0ZTMzZjFkOWIzMDY2MDRhZDJhOWM3NGVjNTJiZWZlMDIzZjUxNWI3Y2M5ZjA3M2YwYmI1MjIyYjlkNWY3M2NlZDBhYTNlNmE2NzY0ZDQyY2I5NDQ2YmJmYTEzM2NhYmI1NjFmMWYyOWM5Y2YwNmQ3ZDdkMmM3MWI1MWUxNTFjIiwiYXV0aG9yaXphdGlvbiI6eyJmcm9tIjoiMHhGODI5NzExMTdiQUY3M2M0MkMwNGM2QTBkNjE5YkE5ZDZhZUE4N2ZhIiwidG8iOiIweDEyMjNkNTY2ZjA1RWE1NEU1ODU0NDM0QzQ1NTJjOWY1QzIyNTllMGYiLCJ2YWx1ZSI6IjExMDAwMCIsInZhbGlkQWZ0ZXIiOiIxNzQ4OTA2MDMxIiwidmFsaWRCZWZvcmUiOiIxNzQ4OTA2NjkxIiwibm9uY2UiOiIweDQ4MWU5ZjZlMmE0M2JjNjJlMGRmMzhlODc5NDliOWM5Y2I4MWE3MGE2MjY1ZGUwNzg0YmRmZWQ5NzM3NTcwYmUifX19\r\n' +
      'Access-Control-Expose-Headers: X-PAYMENT-RESPONSE\r\n' +
      'Host: api.snack.money\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 443,
      protocol: 'https:',
      options: [Object: null prototype],
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {},
      freeSockets: [Object: null prototype],
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      maxCachedSessions: 100,
      _sessionCache: [Object],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/pay',
    _ended: true,
    res: IncomingMessage {
      _events: [Object],
      _readableState: [ReadableState],
      _maxListeners: undefined,
      socket: null,
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 402,
      statusMessage: 'Payment Required',
      client: [TLSSocket],
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'https://api.snack.money/pay',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 30,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: true,
    host: 'api.snack.money',
    protocol: 'https:',
    _redirectable: Writable {
      _events: [Object],
      _writableState: [WritableState],
      _maxListeners: undefined,
      _options: [Object],
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 153,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'https://api.snack.money/pay',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [Array],
      'content-type': [Array],
      'user-agent': [Array],
      'content-length': [Array],
      'accept-encoding': [Array],
      'x-payment': [Array],
      'access-control-expose-headers': [Array],
      host: [Array]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 402,
    statusText: 'Payment Required',
    headers: Object [AxiosHeaders] {
      connection: 'keep-alive',
      'content-length': '378',
      'content-type': 'application/json; charset=utf-8',
      etag: 'W/"17a-MCqCKzY93moxJdUH2ME7ExCQQaM"',
      server: 'Google Frontend',
      'x-cloud-trace-context': '1df46eca52696dbcc435bf4b265d6276',
      'x-powered-by': 'Express',
      'accept-ranges': 'bytes',
      date: 'Mon, 02 Jun 2025 23:23:52 GMT',
      'x-served-by': 'cache-iad-kiad7000029-IAD',
      'x-cache': 'MISS',
      'x-cache-hits': '0',
      'x-timer': 'S1748906632.739268,VS0,VE385',
      vary: 'Origin, x-fh-requested-host, accept-encoding',
      'alt-svc': 'h3=":443";ma=86400,h3-29=":443";ma=86400,h3-27=":443";ma=86400'
    },
    config: {
      transitional: [Object],
      adapter: [Array],
      transformRequest: [Array],
      transformResponse: [Array],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: [Object],
      validateStatus: [Function: validateStatus],
      headers: [Object [AxiosHeaders]],
      baseURL: 'https://api.snack.money',
      method: 'post',
      url: '/pay',
      data: '{"amount":0.1,"currency":"USDC","type":"social-network","sender_username":"agent-mesut2","receiver_username":"0xmesuthere","receiver_identity":"twitter"}',
      allowAbsoluteUrls: true,
      __is402Retry: true
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: '153',
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: true,
      socket: [TLSSocket],
      _header: 'POST /pay HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 153\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'X-PAYMENT: eyJ4NDAyVmVyc2lvbiI6MSwic2NoZW1lIjoiZXhhY3QiLCJuZXR3b3JrIjoiYmFzZSIsInBheWxvYWQiOnsic2lnbmF0dXJlIjoiMHg2MTU0ZTMzZjFkOWIzMDY2MDRhZDJhOWM3NGVjNTJiZWZlMDIzZjUxNWI3Y2M5ZjA3M2YwYmI1MjIyYjlkNWY3M2NlZDBhYTNlNmE2NzY0ZDQyY2I5NDQ2YmJmYTEzM2NhYmI1NjFmMWYyOWM5Y2YwNmQ3ZDdkMmM3MWI1MWUxNTFjIiwiYXV0aG9yaXphdGlvbiI6eyJmcm9tIjoiMHhGODI5NzExMTdiQUY3M2M0MkMwNGM2QTBkNjE5YkE5ZDZhZUE4N2ZhIiwidG8iOiIweDEyMjNkNTY2ZjA1RWE1NEU1ODU0NDM0QzQ1NTJjOWY1QzIyNTllMGYiLCJ2YWx1ZSI6IjExMDAwMCIsInZhbGlkQWZ0ZXIiOiIxNzQ4OTA2MDMxIiwidmFsaWRCZWZvcmUiOiIxNzQ4OTA2NjkxIiwibm9uY2UiOiIweDQ4MWU5ZjZlMmE0M2JjNjJlMGRmMzhlODc5NDliOWM5Y2I4MWE3MGE2MjY1ZGUwNzg0YmRmZWQ5NzM3NTcwYmUifX19\r\n' +
        'Access-Control-Expose-Headers: X-PAYMENT-RESPONSE\r\n' +
        'Host: api.snack.money\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/pay',
      _ended: true,
      res: [IncomingMessage],
      aborted: false,
      timeoutCb: null,
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: true,
      host: 'api.snack.money',
      protocol: 'https:',
      _redirectable: [Writable],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: {
      x402Version: 1,
      code: 402,
      msg: 'insufficient_funds',
      accepts: [Array],
      payer: ''
    }
  },
  status: 402
}